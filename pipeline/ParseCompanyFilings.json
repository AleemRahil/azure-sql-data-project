{
	"name": "ParseCompanyFilings",
	"properties": {
		"description": "Represents a data pipeline that grabs company filings from the SEC on a scheduled basis.",
		"activities": [
			{
				"name": "LookupCikNumbers",
				"description": "Returns the CIK numbers from the `ST_Tickers_CIK` table.",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT TOP(5) \n    *\nFROM [dbo].[ST_Tickers_CIK]\nWHERE [Date_Pulled] < DATEADD(day,-10, GETDATE())",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSecCikTable",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "LoopThroughEachCikNumber",
				"description": "Loops through each CIK number to get the CIK number.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookupCikNumbers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LookupCikNumbers').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CopyCikFilingDirectory",
							"description": "Makes a HTTP GET request to grab the specific company's SEC directory which contains all of their filings.",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"maxConcurrentConnections": 3,
										"requestMethod": "GET",
										"requestTimeout": ""
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings",
										"filePattern": "setOfObjects"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DynamicSecDirectory",
									"type": "DatasetReference",
									"parameters": {
										"cik": {
											"value": "@item().CIK",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureTradingFactorySecDumps",
									"type": "DatasetReference",
									"parameters": {
										"FileName": {
											"value": "@concat(item().CIK,'.jsonc')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "CleanUpFilings",
							"type": "ExecuteDataFlow",
							"dependsOn": [
								{
									"activity": "RunCleanUp",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "CleanUpFilings",
									"type": "DataFlowReference",
									"datasetParameters": {
										"AzureBlobStorageSecFilings": {
											"FileName": "@concat(item().CIK,'.jsonc')"
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						},
						{
							"name": "RunCleanUp",
							"description": "Runs the TradingSystemSecParserTrigger function which cleans up the dumped JSON files.",
							"type": "AzureFunctionActivity",
							"dependsOn": [
								{
									"activity": "CopyCikFilingDirectory",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"functionName": {
									"value": "@concat('TradingSystemSecParserTrigger?cik_number=',item().CIK)",
									"type": "Expression"
								},
								"method": "GET"
							},
							"linkedServiceName": {
								"referenceName": "TradingSystemAzureFunctions",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "RunDelete",
							"type": "AzureFunctionActivity",
							"dependsOn": [
								{
									"activity": "CleanUpFilings",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"functionName": {
									"value": "@concat('TradingSystemSecParserTrigger?to_delete=True&cik_number=',item().CIK)",
									"type": "Expression"
								},
								"method": "GET"
							},
							"linkedServiceName": {
								"referenceName": "TradingSystemAzureFunctions",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "UpdateCikPullDate",
							"description": "Updates the `Date_Pulled` column in the CIK table to make sure we don't keep pulling the same filings.",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "RunDelete",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "UPDATE [dbo].[ST_Tickers_CIK] \nSET Date_Pulled = GETDATE()\n       WHERE CIK = @{item().CIK};\n\nSELECT * FROM [dbo].[ST_Tickers_CIK]  WHERE CIK = @{item().CIK};\n\n\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSecCikTable",
									"type": "DatasetReference"
								}
							}
						}
					]
				}
			}
		],
		"folder": {
			"name": "SecFilings"
		},
		"annotations": [
			"filings",
			"trading-systems"
		]
	}
}