{
	"name": "CleanUpFilings",
	"properties": {
		"folder": {
			"name": "SecFilings"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureTradingFactorySecDumpsAggregated",
						"type": "DatasetReference"
					},
					"name": "AzureBlobStorageSecFilings"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSecCompanyFilingsTable",
						"type": "DatasetReference"
					},
					"name": "DumpToSecDatabase"
				}
			],
			"transformations": [
				{
					"name": "ConvertDataTypeNameColumn",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "RevomeColumnsFileSize",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "AddIdColumns"
				},
				{
					"name": "AddRowIdColumn"
				},
				{
					"name": "SetItemIdToString",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "RenameColumns"
				},
				{
					"name": "AlterRowForUpsert"
				}
			],
			"script": "source(output(\n\t\tfull_path as string,\n\t\tlast_modified as timestamp,\n\t\tlast_modified_iso as string,\n\t\tlast_modified_timestamp as double,\n\t\tname as long,\n\t\tsize as string,\n\t\ttype as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true,\n\tdocumentForm: 'arrayOfDocuments') ~> AzureBlobStorageSecFilings\nAzureBlobStorageSecFilings derive(each(match(name=='name'), $$ = toString($$))) ~> ConvertDataTypeNameColumn\nConvertDataTypeNameColumn select(mapColumn(\n\t\teach(match(name!='last_modified_iso'&&name!='last_modified_timestamp'&&name!='size'))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RevomeColumnsFileSize\nRevomeColumnsFileSize derive(cik_number = split(full_path, '/')[7],\n\t\taccession_number = split(full_path, '/')[8],\n\t\tdate_pulled = currentDate(),\n\t\tis_pulled = false()) ~> AddIdColumns\nAddIdColumns derive(item_id = concat(cik_number, accession_number)) ~> AddRowIdColumn\nAddRowIdColumn derive(item_id = toString(item_id)) ~> SetItemIdToString\nSetItemIdToString select(mapColumn(\n\t\tFiling_ID = item_id,\n\t\tCIK = cik_number,\n\t\tAccession_Number = accession_number,\n\t\tFiling_Path = full_path,\n\t\tLast_Modified = last_modified,\n\t\tFile_Name = name,\n\t\tFile_Type = type,\n\t\tDate_Pulled = date_pulled,\n\t\tIs_Pulled = is_pulled\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumns\nRenameColumns alterRow(upsertIf(true())) ~> AlterRowForUpsert\nAlterRowForUpsert sink(input(\n\t\tFiling_ID as string,\n\t\tCIK as string,\n\t\tAccession_Number as string,\n\t\tFull_Path as string,\n\t\tLast_Modified as timestamp,\n\t\tFile_Name as string,\n\t\tFile_Type as string,\n\t\tDate_Pulled as timestamp,\n\t\tIs_Pulled as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Filing_ID'],\n\tformat: 'table',\n\tmapColumn(\n\t\tFiling_ID,\n\t\tCIK,\n\t\tAccession_Number,\n\t\tLast_Modified,\n\t\tFile_Name,\n\t\tFile_Type,\n\t\tDate_Pulled,\n\t\tIs_Pulled,\n\t\tFull_Path = Filing_Path\n\t),\n\tdateFormat:'MM/dd/yyyy',\n\ttimestampFormat:'MM/dd/yyyy HH:mm:ss',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError') ~> DumpToSecDatabase"
		}
	}
}